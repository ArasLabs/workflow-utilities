<AML>
 <Item type="Method" id="FC2E85578ACA4EDD8EC30417A1A50DB4" action="add">
  <comments>use on pre-Method of Workflow Map Paths</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[//Must be callod on a pre-Method of a workflow map path
//assuming the next activity could be defined as "automatic" without assigmnent.
//if during the workflow process this activity get assignments added  (adhoc),
//then remove the "automatic" flag so it is not skipped

Innovator inn = this.getInnovator();
//System.Diagnostics.Debugger.Break();

//this context has id of next Activtiy - only !
//now, get the assignments of this activty
Item assignmentRels = inn.newItem("Activity Assignment","get");
assignmentRels.setProperty("source_id",this.getID());
assignmentRels.setAttribute("select","source_id(name,is_auto),related_id(keyed_name)");
assignmentRels.setAttribute("serverEvents","0");
assignmentRels = assignmentRels.apply();

if (assignmentRels.getItemCount() == 0) {return this;}  //nothing to do
if (assignmentRels.isError()) {return assignmentRels;}

//if assigments found, then reset the "automatic" flag, if set
Aras.Server.Security.Identity plmIdentity = Aras.Server.Security.Identity.GetByName("Super User");
bool PermissionWasSet = Aras.Server.Security.Permissions.GrantIdentity(plmIdentity);

Item q = this.newItem("Activity","edit");
q.setID(this.getID());
q.setProperty("is_auto","");
Item res = q.apply();
if (PermissionWasSet) Aras.Server.Security.Permissions.RevokeIdentity(plmIdentity);
if (res.isError()) {return res;}

// update prop in context
this.setProperty("is_auto","");

return this;]]></method_code>
  <method_type>C#</method_type>
  <name>ResetAutoIfActivityAssignments</name>
 </Item>
</AML>